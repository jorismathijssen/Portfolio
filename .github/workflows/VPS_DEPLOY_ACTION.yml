name: 🚀 Build and Deploy Portfolio to VPS

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 🧾 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: 📦 Install dependencies & build
        run: |
          npm ci
          npm run build

      - name: 📁 Create deployment bundle
        run: |
          mkdir -p deploy
          cp -r .next deploy/
          cp -r public deploy/
          cp package.json deploy/
          cp next.config.mjs deploy/
          cp Dockerfile deploy/
          cp docker-compose.yml deploy/
          tar -czf portfolio-${{ github.run_number }}.tar.gz -C deploy .

      - name: 📤 Copy bundle to VPS
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          source: portfolio-${{ github.run_number }}.tar.gz
          target: ~/deploy/

      - name: 🔧 SSH & deploy safely
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            set -e
            
            # Extract new version
            cd ~/deploy
            rm -rf current
            mkdir current
            tar -xzf portfolio-${{ github.run_number }}.tar.gz -C current

            # Update symlink
            rm -rf ~/Portfolio
            ln -sfn ~/deploy/current ~/Portfolio

            # Deploy with Docker
            cd ~/Portfolio
            export GITHUB_RUN_NUMBER=${{ github.run_number }}
            
            # Load environment variables
            set -a  # automatically export all variables
            source /home/ubuntu/envs/portfolio.env
            set +a  # disable automatic export
            
            docker compose down || true
            docker compose build --no-cache
            docker compose up -d

            # Cleanup
            docker image prune -f
            find ~/deploy -name "portfolio-*.tar.gz" -type f | head -n -3 | xargs rm -f

            echo "✅ Deployment complete!"
