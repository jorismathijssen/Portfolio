name: 🚀 Build and Deploy Portfolio to VPS

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 🧾 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: 📦 Install dependencies & build
        run: |
          npm ci
          npm run build

      - name: 📁 Create deployment bundle (under /Portfolio)
        run: |
          mkdir -p deploy/Portfolio/.next
          cp -r .next/standalone deploy/Portfolio/.next/
          cp -r .next/static deploy/Portfolio/.next/
          cp -r public deploy/Portfolio/
          cp package.json deploy/Portfolio/
          cp next.config.mjs deploy/Portfolio/
          cp docker-compose.yml deploy/Portfolio/
          tar -czf portfolio-${{ github.run_number }}.tar.gz -C deploy Portfolio

      - name: 📤 Copy bundle to VPS
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          source: portfolio-${{ github.run_number }}.tar.gz
          target: ~/deploy/

      - name: 🔧 SSH & deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            set -e

            echo "🧹 Clean contents of previous ~/Portfolio build"
            find ~/Portfolio -mindepth 1 -exec rm -rf {} +

            echo "📦 Extracting new bundle"
            tar -xzf ~/deploy/portfolio-${{ github.run_number }}.tar.gz -C ~

            echo "🔄 Restarting Docker Compose"
            cd ~/Portfolio
            docker compose down
            docker compose up -d --remove-orphans

            echo "🗑️ Cleaning up old tarballs (keeping 3)"
            cd ~/deploy
            ls -tp portfolio-*.tar.gz | grep -v '/$' | tail -n +4 | xargs -r rm --

            echo "✅ Deployment complete."
